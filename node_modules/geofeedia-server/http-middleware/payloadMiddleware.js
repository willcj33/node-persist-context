"use strict";

var jwt = require('jsonwebtoken');
var validateExtension = require('./../extensions/validate');

module.exports = {};

module.exports.jwtParser = function (secret) {
	return function (req, res, next) {
		if(req.path() === '/health') {
			next();
			return true;
		}
		try {
			var tempJwt = req.params.jwt;
			if (!tempJwt){ tempJwt = req.body; }
			jwt.verify(tempJwt, secret, function (error, payload) {
				if(error) {
					req.logger.log('Forbidden Request');
					res.send(403, 'Forbidden Request.');
				} else {
					req.verifiedParams = payload;
					next();
				}
			});
		} catch (ex) {
			req.logger.log(ex);
			res.send(500, ex.message);
			throw ex;
		}
	}
};

module.exports.validateParams = function (validationFunctions) {
	validateExtension.init(validationFunctions);
	return function (req, res, next) {
		try {
			let path = req.path().split('/')[1];
			if(!req.verifiedParams.validate(path, req.method, req)) {
				req.logger.log('Bad Request. Invalid Parameters.\nThe token sent to \/' + path + ' has (an) invalid parameter(s).');
				res.send(400, 'Bad Request. Invalid Parameters.');
			} else {
				next();
			}
		} catch (ex) {
			req.logger.log(ex);
			throw ex;
		}
	}		
};