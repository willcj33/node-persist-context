"use strict";

const BaseService = require('./../service.js');

module.exports = [
    {
        type: BaseService.ACTION_TYPES.GET,
        route: '/test',
        handler: function (req, res, next) {
            res.send(200, req.params);
            return next();
        }
    },
    {
        type: BaseService.ACTION_TYPES.GET,
        route: '/test-metricBuilder',
        handler: function (req, res, next) {
            req.metricBuilder.startTimer('test');
            setTimeout(() => {
                req.metricBuilder.finishTimer('test');
                res.send(200, req.params);
                next();
            }, 500);
        }
    },
	{
		type: BaseService.ACTION_TYPES.POST,
		route: '/test-schema',
		schema: {
			"type": "object",
			"required": true,
			"properties": {
				"aNumber": {
					"type": "number",
					"required": true,
					"min": 0,
					"max": 100
				},
				"aString": {
					"type": "string",
					"required": true,
					"minLength": 2,
					"maxLength": 20
				},
				"aDate": {
					"type": "date",
					"required": true,
					"minDate": "2016-09-01",
					"maxDate": "2016-10-01"
				},
				"aBool": {
					"type": "bool",
					"required": true
				},
				"anArray": {
					"type": "array",
					"minItems": 1,
					"maxItems": 4,
					"items": {
						"type": "number",
						"required": true
					}
				},
				"anObject": {
					"type": "object",
					"required": true
				},
				"notRequired": {
					"type": "number",
					"required": false,
					"min": 5,
					"max": 6
				},
				"aRegex": {
					"type": "string",
					"required": false,
					"pattern": "^Hello\\s{1}[a-zA-Z]+$"
				},
				"aStringEnum": {
					"type": "string",
					"required": false,
					"oneOf": [
						"hey",
						"you",
						"mambo"
					]
				},
				"aNumberEnum": {
					"type": "number",
					"required": false,
					"oneOf": [ 1 , 2 , 3 , 5 , 7 , 11]
				},
				"aNonReqBool": {
					"type": "bool",
					"required": false
				}
			}
		},
		handler: function (req, res, next) {
			res.send(200);
			return next();
		}
	}
];