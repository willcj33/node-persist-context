build:
    image: quay.io/geofeedia/node:5.7.0
    pull: true
    when:
        branch: 1.*
    volumes:
        - /etc/kubernetes/ssl/:/etc/kubernetes/ssl/
    commands:
        - mkdir -p /drone/.ssl/
        - cp -a /etc/kubernetes/ssl/. /drone/.ssl/
        - apt-get update && apt-get -y --no-install-recommends install dnsutils
        # ultimately the goal is to get the IP of the sinopia-v1.devel k8s service.
        # Also trims any whitespace.
        - "export SINOPIA_IP=$(echo $(nslookup sinopia-v1.devel.svc.cluster.local 10.100.0.10 | awk -F\":  \" \"NR==5 { print $2 } \") | tr -d \"[[:space:]]\")"
        # remove first 9 characters from string so we only get the IP
        - "export NPM_CONFIG_REGISTRY=http://$(echo $SINOPIA_IP | cut -c 9-):4873"
        - npm install --only=dev
        - npm run dist

cache:
    mount:
      - node_modules

notify:
    slack:
        webhook_url: "$$SLACK_URL"
        channel: build-status
        username: Drone Build Server
        template: |+
            Repo: {{ repo.full_name }}
            Build Status: {{ uppercase build.status }}
            Build #{{ build.number }} by {{ build.author }}
            Branch: {{ build.branch }}
            Commit: {{ truncate build.commit 8 }}
            {{ build.link_url }}
        when:
            failure: true
            branch: 1.*

publish:
    docker:
        registry: quay.io
        username: "$$QUAY_USERNAME"
        password: "$$QUAY_PASSWORD"
        email: robo@geofeedia.com
        repo: geofeedia/{{repo}}
        tag: v1-$$COMMIT
        file: dist/Dockerfile
        context: dist/
        storage_driver: overlay
        mtu: "1400"
        when:
            branch: 1.*

    drone-k8s:
        image: quay.io/geofeedia/drone-k8s:1.0.0
        is_deployment: "true"
        deployment_resource_name: {{name}}-v1
        container_name: {{name}}
        namespace: {{name}}
        docker_image: quay.io/geofeedia/{{name}}:v1-$$COMMIT
        path_to_cert_authority: /drone/.ssl/ca.pem
        path_to_client_key: /drone/.ssl/worker-key.pem
        path_to_client_cert: /drone/.ssl/worker.pem
        update_period: 1m0s
        timeout: 3m0s
        when:
            branch: 1.*